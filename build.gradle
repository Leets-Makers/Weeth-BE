plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'leets'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.auth0:java-jwt:4.2.1'

	// mapStruct
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
	testImplementation "org.testcontainers:testcontainers:2.0.1"
	testImplementation "org.testcontainers:testcontainers-junit-jupiter:2.0.1"
	testImplementation "org.testcontainers:testcontainers-mysql:2.0.1"
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// AWS Spring Cloud
	implementation 'software.amazon.awssdk:s3:2.19.1'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Spring Authorization Server
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'

    // Prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

}

tasks.named('test') {
	useJUnitPlatform()
}
//도커 실행 중 plain jar 파일의 생성을 방지
jar {
	enabled = false
}
